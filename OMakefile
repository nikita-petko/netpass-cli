#!/usr/bin/env omake

DefineDefaultRules()

SUPPORTED_TARGETS       =   CTR-T*.Process.MPCore.*
INCLUDES           += include
INCLUDES           += src

# Specify the source code to build.
SOURCES[] =
            src/np_Main.cpp

            # Memory API
            src/memory/memory_Api.cpp

            # HTTP API
            src/http/http_Api.cpp

            # Utility
            src/util/util_Base64.cpp
            src/util/util_Cec.cpp

            # Configuration API
            src/config/config_Api.cpp
            src/config/config_TitleList.cpp

            # NetPass API
            src/api/api_Location.cpp
            src/api/api_Passes.cpp
            src/api/api_Boxes.cpp
            src/api/api_DownloadThread.cpp

            # Graphics API
            src/graphics/graphics_Api.cpp
            src/graphics/graphics_Color.cpp
            src/graphics/graphics_Console.cpp
            src/graphics/graphics_TextUtility.cpp

            # Scene API
            src/scene/scene_SceneBase.cpp
            src/scene/scene_SceneManager.cpp

            src/scene/scenes/scene_HelpScene.cpp
            src/scene/scenes/scene_LoadingScene.cpp
            src/scene/scenes/scene_HomeScene.cpp
            src/scene/scenes/scene_SwitchScene.cpp
            src/scene/scenes/scene_LocationScene.cpp
            src/scene/scenes/scene_SettingsScene.cpp
            src/scene/scenes/scene_ToggleTitleScene.cpp
            src/scene/scenes/scene_RequestPassesScene.cpp


include graphics

SOURCES         +=   $(LIB_GRAPHICS_SOURCES)
BIN2OBJ_FLAGS   +=   -r
OBJECTS         +=   $(LIB_GRAPHICS_OBJECTS)


# Specify the program name.
# No extension is needed.
TITLE               =   netpass_cli
TARGET_PROGRAM          =   CN_NPAS_00.01
ROM_SPEC_FILE       =   netpass-cli.rsf
DESCRIPTOR        = $(CTRSDK_ROOT)/resources/specfiles/Application.desc
CTR_BANNER_SPEC		= 	resource/banner.bsf
CTR_APPTYPE = SD

FORCE_LOGGING = false

if $(and $(equal $(BUILD),Release), $(not $(equal $(FORCE_LOGGING),true)))
    LOGGING_ENABLED = false
    export
else
    LOGGING_ENABLED = true
    export

# Suppress padding warnings
CCFLAGS_WARNING += --diag_suppress 1301,2530

if $(and $(defined LOGGING_ENABLED), $(equal $(LOGGING_ENABLED),true))
    DEBUG_PRINT         =   true
    CCFLAGS_MACRO       +=  -DNP_LOGGING_ENABLED -DNN_LOG_LEVEL=NN_LOG_LEVEL_DEBUG
    SOURCES             +=  src/log/log_Api.cpp
    export
else
    DEBUG_PRINT         =   false
    export

include $(ROOT_OMAKE)/modulerules

build: $(DEFAULT_TARGETS)
